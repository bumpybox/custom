#! C:/Program Files/Nuke6.1v1/Nuke6.1.exe -nx
version 6.1 v1
Gizmo {
 addUserKnob {20 UnspillMadness l "Unspill Settings"}
 addUserKnob {26 text l "" +STARTLINE T "UnspillMadness by Andreas Frickinger"}
 addUserKnob {26 ""}
 addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
 addUserKnob {41 algorithm l "spill matte algorithm" T GizmoControl.algorithm}
 addUserKnob {26 ""}
 addUserKnob {41 channelBalance l "channel balance" T GizmoControl.channelBalance}
 addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
 addUserKnob {26 ""}
 addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
 addUserKnob {41 saturation T CC_SpillMap.saturation}
 addUserKnob {41 gamma T CC_SpillMap.gamma}
 addUserKnob {41 offset T CC_SpillMap.offset}
 addUserKnob {26 ""}
 addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
}
 Input {
  inputs 0
  name Input1
  xpos 262
  ypos -336
 }
 Dot {
  name Dot6
  xpos 296
  ypos -186
 }
set N7b49170 [stack 0]
 Dot {
  name Dot2
  xpos 296
  ypos -71
 }
set N7b493e0 [stack 0]
 Dot {
  name Dot3
  xpos 426
  ypos -71
 }
set N7b49650 [stack 0]
 Expression {
  expr3 b-g*LimitPercentage
  name GreenLimitsBlue1
  xpos 528
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N7b49650
 Expression {
  expr3 b-r*LimitPercentage
  name RedLimitsBlue
  xpos 392
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N7b49650
 Expression {
  expr3 b-(r+g)*LimitPercentage/2
  name RedAndGreenLimitBlue
  xpos 662
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
 Switch {
  inputs 3
  which {{GizmoControl.algorithm i}}
  name SwitchBlue
  xpos 528
  ypos 190
 }
 Dot {
  name Dot5
  xpos 562
  ypos 370
 }
push $N7b493e0
 Dot {
  name Dot1
  xpos 164
  ypos -71
 }
set N7b4a280 [stack 0]
 Expression {
  expr3 g-b*LimitPercentage
  name BlueLimitsGreen
  xpos -15
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
push $N7b4a280
 Expression {
  expr3 g-r*LimitPercentage
  name RedLimitsGreen
  xpos -160
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage 1
 }
push $N7b4a280
 Expression {
  expr3 g-(r+b)*LimitPercentage/2
  name RedAveBlueLimitsGreen
  xpos 130
  ypos 44
  addUserKnob {20 User}
  addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
  LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
 }
 Switch {
  inputs 3
  which {{GizmoControl.algorithm i}}
  name SwitchGreen
  xpos -15
  ypos 199
 }
 Dot {
  name Dot4
  xpos 19
  ypos 370
 }
 Switch {
  inputs 2
  which {{GizmoControl.screenType i}}
  name SwitchMain
  xpos 257
  ypos 366
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  alpha black
  name ShuffleSpillMap
  xpos 257
  ypos 423
 }
 Clamp {
  channels alpha
  name Clamp1
  selected true
  xpos 257
  ypos 449
 }
set N7b8ce50 [stack 0]
 Dot {
  name Dot17
  xpos 967
  ypos 459
 }
 Dot {
  name Dot18
  xpos 967
  ypos 1142
 }
push $N7b8ce50
 Multiply {
  value {{GizmoControl.channelBalance i} {GizmoControl.channelBalance i} {GizmoControl.channelBalance i} 1}
  name MultiplySpillMap
  xpos 257
  ypos 524
 }
set N7b8d5a0 [stack 0]
 Dot {
  name Dot16
  xpos 450
  ypos 534
 }
push $N7b49170
 Dot {
  name Dot7
  xpos -345
  ypos -186
 }
 Dot {
  name Dot11
  xpos -345
  ypos 663
 }
set N7b8dcf0 [stack 0]
 Dot {
  name Dot12
  xpos -345
  ypos 826
 }
set N7b8df60 [stack 0]
 Dot {
  name Dot13
  xpos -345
  ypos 977
 }
set N7b8e1d0 [stack 0]
 Merge2 {
  inputs 2
  operation plus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge3
  xpos 416
  ypos 973
 }
push $N7b8d5a0
 Dot {
  name Dot15
  xpos 120
  ypos 534
 }
push $N7b8dcf0
 Merge2 {
  inputs 2
  operation plus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge1
  xpos 86
  ypos 659
 }
 Dot {
  name Dot14
  xpos 822
  ypos 663
 }
push $N7b8df60
push $N7b8d5a0
 Merge2 {
  inputs 2
  operation minus
  Achannels rgb
  Bchannels rgb
  output rgb
  name Merge2
  xpos 257
  ypos 822
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy1
  xpos 788
  ypos 816
 }
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.blue
  name Copy2
  xpos 788
  ypos 967
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.alpha
  name Copy3
  xpos 788
  ypos 1132
 }
 ColorCorrect {
  maskChannelInput rgba.alpha
  name CC_SpillMap
  note_font Verdana
  xpos 788
  ypos 1280
 }
set N7ba95a0 [stack 0]
 Dot {
  name Dot9
  xpos 971
  ypos 1290
 }
 Dot {
  name Dot10
  xpos 971
  ypos 1504
 }
push $N7b8e1d0
 Dot {
  name Dot8
  xpos -345
  ypos 1406
 }
 Expression {
  channel0 {-rgba.red -rgba.green -rgba.blue}
  expr0 0
  channel1 {-rgba.red -rgba.green -rgba.blue}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue}
  expr2 0
  channel3 {rgba.alpha none none rgba.alpha}
  expr3 a==0?0:a
  name AlphaError
  label "To avid Gizmo being in state of\nerror without something plugged in input."
  xpos 504
  ypos 1389
 }
push $N7ba95a0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  from3 rgba.alpha
  to3 rgba.alpha
  name CopyAlpha
  xpos 788
  ypos 1389
 }
 Switch {
  inputs 2
  which {{GizmoControl.spillMatteOut i}}
  name SwitchSpillMap
  xpos 788
  ypos 1500
 }
 Output {
  name Output1
  xpos 788
  ypos 1600
 }
 NoOp {
  inputs 0
  name GizmoControl
  xpos 1244
  ypos 241
  addUserKnob {20 User}
  addUserKnob {18 channelBalance l "channel balance" t "the values from this knob get added/subtracted to the corresponding channels with the spill matte as a mask."}
  channelBalance {0.2 0.7 0.3}
  addUserKnob {26 version l v1.0}
  addUserKnob {4 screenType l "screen type" M {green blue}}
  addUserKnob {4 algorithm l "despill algorithm" M {average "red limit" "green/blue limit" ""}}
  addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
 }
end_group
